name: Master

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: golang:bullseye
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

      - name: Build
        run: |
          cd ./discord-bot/
          ls -la
          go get -v -t -d ./...
          go build -buildvcs=false ./... 

      - name: Run test & coverage
        run: |
          cd ./discord-bot/
          go test -v -coverprofile=coverage.out -covermode=atomic ./...
        env:
          ENVIRONMENT: development
          TZ: UTC

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - uses: codecov/codecov-action@v3

  build-image:
    needs: ci
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DISCORD_TOKEN }}

      - name: Extract metadata for docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=edge
            type=sha
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: ./discord-bot/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_UNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            whoami
            sudo docker stop ${{ env.IMAGE_NAME }} || true && sudo docker rm ${{ env.IMAGE_NAME }} || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            sudo docker run -d -p 3000:3000 --restart=always --name ${{ env.IMAGE_NAME }} \
            -e NOTIFICATION_API_SECRET=${{ secrets.NOTIFICATION_API_SECRET }} \
            -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
            -e DISCORD_CHANNEL_ID=${{ secrets.DISCORD_CHANNEL_ID }} \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest